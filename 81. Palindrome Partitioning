class Solution {
private:
    bool isPalindrome(string s, int start, int end){
        while(start<=end){
            if(s[start++] != s[end--]){
                return 0;
            }
        }
        return 1;
    }
private:
    void f(int index, string s, vector<string>& temp, vector<vector<string>>& ans){
        if(index==s.size()){
            ans.push_back(temp);
            return;
        }
        for(int i=index; i<s.size(); i++){
            if(isPalindrome(s, index, i)){
                temp.push_back(s.substr(index, i-index+1));
                f(i+1, s, temp, ans);
                temp.pop_back();
            }
        }
    }
public:
    vector<vector<string>> partition(string s) {
        vector<vector<string>> ans;
        vector<string> temp;
        f(0, s, temp, ans);
        return ans;
    }
};
