bool isPossible(vector<int>&boards, int mid, int k){
    int painter=1;
    int paint=0;
    for(int i=0; i<boards.size(); i++){
        if(paint+boards[i]<=mid){
            paint+=boards[i];
        }
        else{
            painter++;
            if(painter>k || boards[i]>mid){
                return false;
            }
            paint=boards[i];
        }
    }
    return true;
}

int distance(vector<int>&boards, int k, int s, int e){
    int mid=s+(e-s)/2;
    if(s>e){
        return -1;
    }
    if(isPossible(boards, mid, k)){

        if(isPossible(boards, mid-1, k)){
            return distance(boards, k, s, mid-1);
        }
        return mid;
    }
    else{
        return distance(boards, k, mid+1, e);
    }
}

int findLargestMinDistance(vector<int> &boards, int k)
{
    //    Write your code here.
    int s=0;
    int e=0;
    for(auto it:boards){
        e+=it;
    }
    return distance(boards, k, s, e);
}
