class Solution
{
public:
    vector<vector<int>> threeSum(vector<int> &nums)
    {
        vector<vector<int>> ans;
        int n = nums.size();
        sort(nums.begin(), nums.end());
        for (int i = 0; i < n; i++)
        {
            if (i == 0 || (i > 0 && nums[i] != nums[i - 1]))
            {

                int good = nums[i];
                int j = i + 1;
                int k = n - 1;

                while (j < k)
                {

                    int better = nums[j];
                    int best = nums[k];
                    int sum = good + better + best;
                    if (sum == 0)
                    {
                        vector<int> temp;
                        temp.push_back(good);
                        temp.push_back(better);
                        temp.push_back(best);
                        ans.push_back(temp);

                        while (j < k && nums[j] == nums[j + 1])
                        {
                            j++;
                        }
                        while (j < k && nums[k] == nums[k - 1])
                        {
                            k--;
                        }
                        j++;
                        k--;
                    }
                    else if (sum < 0)
                    {
                        j++;
                    }
                    else
                    {
                        k--;
                    }
                }
            }
        }
        return ans;
    }
};
